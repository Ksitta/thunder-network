# Generated by Django 3.1 on 2021-04-14 17:04

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='RawFlowData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('source_ip', models.GenericIPAddressField(verbose_name='源ip地址')),
                ('dest_ip', models.GenericIPAddressField(verbose_name='目标ip地址')),
                ('out_flow', models.IntegerField(verbose_name='出口流量')),
                ('in_flow', models.IntegerField(verbose_name='入口流量')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('contact_details', models.CharField(max_length=12, verbose_name='联系方式')),
                ('contact_email', models.CharField(max_length=20, verbose_name='邮箱')),
                ('contact_address', models.CharField(max_length=100, verbose_name='客户地址')),
                ('user_type', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('site_id', models.CharField(max_length=50, unique=True, verbose_name='站点id')),
                ('site_name', models.CharField(max_length=20, verbose_name='站点名称')),
                ('site_address', models.CharField(max_length=100, verbose_name='站点地址')),
                ('billing_level', models.IntegerField(verbose_name='计费等级')),
                ('demand_num', models.IntegerField(verbose_name='需求数量')),
                ('demand_1', models.CharField(blank=True, max_length=20, verbose_name='需求1')),
                ('demand_2', models.CharField(blank=True, max_length=20, verbose_name='需求2')),
                ('demand_3', models.CharField(blank=True, max_length=20, verbose_name='需求3')),
                ('status', models.IntegerField(verbose_name='订单、部署状态')),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('manager_name', models.CharField(blank=True, default='', max_length=50, verbose_name='运营工程师')),
                ('manager_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('network_name', models.CharField(blank=True, default='', max_length=50, verbose_name='网络工程师')),
                ('network_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('total_up', models.IntegerField(default=0, verbose_name='上行总流量')),
                ('total_down', models.IntegerField(default=0, verbose_name='下行总流量')),
                ('flow_data', models.CharField(default='', max_length=1000, verbose_name='流量数据')),
                ('rate_unit', models.CharField(default='byte', max_length=10, verbose_name='速率单位')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eq_id', models.CharField(max_length=50, unique=True, verbose_name='设备id')),
                ('eq_name', models.CharField(max_length=20, verbose_name='设备名称')),
                ('eq_status', models.IntegerField(verbose_name='设备状态')),
                ('total_up', models.IntegerField(default=0, verbose_name='上行总流量')),
                ('total_down', models.IntegerField(default=0, verbose_name='下行总流量')),
                ('flow_data', models.CharField(default='', max_length=1000, verbose_name='流量数据')),
                ('rate_unit', models.CharField(default='byte', max_length=10, verbose_name='速率单位')),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HUAWEI.site')),
            ],
        ),
    ]
