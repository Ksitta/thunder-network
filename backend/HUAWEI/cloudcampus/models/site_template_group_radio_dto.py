# coding: utf-8

"""
    AP站点模板射频配置

    AP站点模板射频配置第三方接口说明。 

    OpenAPI spec version: 1.1.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class SiteTemplateGroupRadioDto(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'country_code': 'str',
        'calibrate': 'str',
        'dca_start_time': 'str',
        'dca_interval': 'int',
        'dca_schedule_time': 'str',
        'scan_duration': 'str',
        'scan_interval': 'str',
        'scan_channel': 'str',
        'beacon_cycle': 'int',
        'dynamic_switch': 'bool',
        'reference_data_analysis': 'bool',
        'group_radio2g': 'GroupRadio2gConfigDto',
        'group_radio5g': 'GroupRadio5gConfigDto'
    }

    attribute_map = {
        'country_code': 'countryCode',
        'calibrate': 'calibrate',
        'dca_start_time': 'dcaStartTime',
        'dca_interval': 'dcaInterval',
        'dca_schedule_time': 'dcaScheduleTime',
        'scan_duration': 'scanDuration',
        'scan_interval': 'scanInterval',
        'scan_channel': 'scanChannel',
        'beacon_cycle': 'beaconCycle',
        'dynamic_switch': 'dynamicSwitch',
        'reference_data_analysis': 'referenceDataAnalysis',
        'group_radio2g': 'groupRadio2g',
        'group_radio5g': 'groupRadio5g'
    }

    def __init__(self, country_code=None, calibrate=None, dca_start_time=None, dca_interval=None, dca_schedule_time=None, scan_duration=None, scan_interval=None, scan_channel=None, beacon_cycle=None, dynamic_switch=None, reference_data_analysis=None, group_radio2g=None, group_radio5g=None):
        """
        SiteTemplateGroupRadioDto - a model defined in Swagger
        """

        self._country_code = None
        self._calibrate = None
        self._dca_start_time = None
        self._dca_interval = None
        self._dca_schedule_time = None
        self._scan_duration = None
        self._scan_interval = None
        self._scan_channel = None
        self._beacon_cycle = None
        self._dynamic_switch = None
        self._reference_data_analysis = None
        self._group_radio2g = None
        self._group_radio5g = None

        if country_code is not None:
          self.country_code = country_code
        if calibrate is not None:
          self.calibrate = calibrate
        if dca_start_time is not None:
          self.dca_start_time = dca_start_time
        if dca_interval is not None:
          self.dca_interval = dca_interval
        if dca_schedule_time is not None:
          self.dca_schedule_time = dca_schedule_time
        if scan_duration is not None:
          self.scan_duration = scan_duration
        if scan_interval is not None:
          self.scan_interval = scan_interval
        if scan_channel is not None:
          self.scan_channel = scan_channel
        if beacon_cycle is not None:
          self.beacon_cycle = beacon_cycle
        if dynamic_switch is not None:
          self.dynamic_switch = dynamic_switch
        if reference_data_analysis is not None:
          self.reference_data_analysis = reference_data_analysis
        if group_radio2g is not None:
          self.group_radio2g = group_radio2g
        if group_radio5g is not None:
          self.group_radio5g = group_radio5g

    @property
    def country_code(self):
        """
        Gets the country_code of this SiteTemplateGroupRadioDto.
        国家码。

        :return: The country_code of this SiteTemplateGroupRadioDto.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """
        Sets the country_code of this SiteTemplateGroupRadioDto.
        国家码。

        :param country_code: The country_code of this SiteTemplateGroupRadioDto.
        :type: str
        """

        self._country_code = country_code

    @property
    def calibrate(self):
        """
        Gets the calibrate of this SiteTemplateGroupRadioDto.
        调优模式，只能为manual，auto，schedule其中一种。

        :return: The calibrate of this SiteTemplateGroupRadioDto.
        :rtype: str
        """
        return self._calibrate

    @calibrate.setter
    def calibrate(self, calibrate):
        """
        Sets the calibrate of this SiteTemplateGroupRadioDto.
        调优模式，只能为manual，auto，schedule其中一种。

        :param calibrate: The calibrate of this SiteTemplateGroupRadioDto.
        :type: str
        """

        self._calibrate = calibrate

    @property
    def dca_start_time(self):
        """
        Gets the dca_start_time of this SiteTemplateGroupRadioDto.
        自动调优模式下有效。自动调优开始时间，时间格式hh:mm:ss。

        :return: The dca_start_time of this SiteTemplateGroupRadioDto.
        :rtype: str
        """
        return self._dca_start_time

    @dca_start_time.setter
    def dca_start_time(self, dca_start_time):
        """
        Sets the dca_start_time of this SiteTemplateGroupRadioDto.
        自动调优模式下有效。自动调优开始时间，时间格式hh:mm:ss。

        :param dca_start_time: The dca_start_time of this SiteTemplateGroupRadioDto.
        :type: str
        """

        self._dca_start_time = dca_start_time

    @property
    def dca_interval(self):
        """
        Gets the dca_interval of this SiteTemplateGroupRadioDto.
        自动调优模式下有效。自动调优时间周期，取值范围为30到1440之间的整数，单位（min）。

        :return: The dca_interval of this SiteTemplateGroupRadioDto.
        :rtype: int
        """
        return self._dca_interval

    @dca_interval.setter
    def dca_interval(self, dca_interval):
        """
        Sets the dca_interval of this SiteTemplateGroupRadioDto.
        自动调优模式下有效。自动调优时间周期，取值范围为30到1440之间的整数，单位（min）。

        :param dca_interval: The dca_interval of this SiteTemplateGroupRadioDto.
        :type: int
        """
        if dca_interval is not None and dca_interval > 1440:
            raise ValueError("Invalid value for `dca_interval`, must be a value less than or equal to `1440`")
        if dca_interval is not None and dca_interval < 30:
            raise ValueError("Invalid value for `dca_interval`, must be a value greater than or equal to `30`")

        self._dca_interval = dca_interval

    @property
    def dca_schedule_time(self):
        """
        Gets the dca_schedule_time of this SiteTemplateGroupRadioDto.
        定时调优模式下有效。定时调优开始时间，时间格式hh:mm:ss。

        :return: The dca_schedule_time of this SiteTemplateGroupRadioDto.
        :rtype: str
        """
        return self._dca_schedule_time

    @dca_schedule_time.setter
    def dca_schedule_time(self, dca_schedule_time):
        """
        Sets the dca_schedule_time of this SiteTemplateGroupRadioDto.
        定时调优模式下有效。定时调优开始时间，时间格式hh:mm:ss。

        :param dca_schedule_time: The dca_schedule_time of this SiteTemplateGroupRadioDto.
        :type: str
        """

        self._dca_schedule_time = dca_schedule_time

    @property
    def scan_duration(self):
        """
        Gets the scan_duration of this SiteTemplateGroupRadioDto.
        扫描时长，范围60~100，单位（ms）。

        :return: The scan_duration of this SiteTemplateGroupRadioDto.
        :rtype: str
        """
        return self._scan_duration

    @scan_duration.setter
    def scan_duration(self, scan_duration):
        """
        Sets the scan_duration of this SiteTemplateGroupRadioDto.
        扫描时长，范围60~100，单位（ms）。

        :param scan_duration: The scan_duration of this SiteTemplateGroupRadioDto.
        :type: str
        """

        self._scan_duration = scan_duration

    @property
    def scan_interval(self):
        """
        Gets the scan_interval of this SiteTemplateGroupRadioDto.
        扫描间隔，范围300~600000，单位（ms）。

        :return: The scan_interval of this SiteTemplateGroupRadioDto.
        :rtype: str
        """
        return self._scan_interval

    @scan_interval.setter
    def scan_interval(self, scan_interval):
        """
        Sets the scan_interval of this SiteTemplateGroupRadioDto.
        扫描间隔，范围300~600000，单位（ms）。

        :param scan_interval: The scan_interval of this SiteTemplateGroupRadioDto.
        :type: str
        """

        self._scan_interval = scan_interval

    @property
    def scan_channel(self):
        """
        Gets the scan_channel of this SiteTemplateGroupRadioDto.
        扫描信道，只能为country-channel，dca-channel，work-channel其中一种。

        :return: The scan_channel of this SiteTemplateGroupRadioDto.
        :rtype: str
        """
        return self._scan_channel

    @scan_channel.setter
    def scan_channel(self, scan_channel):
        """
        Sets the scan_channel of this SiteTemplateGroupRadioDto.
        扫描信道，只能为country-channel，dca-channel，work-channel其中一种。

        :param scan_channel: The scan_channel of this SiteTemplateGroupRadioDto.
        :type: str
        """

        self._scan_channel = scan_channel

    @property
    def beacon_cycle(self):
        """
        Gets the beacon_cycle of this SiteTemplateGroupRadioDto.
        beacon周期。取值范围为60到1000之间的整数。单位（TUs）。

        :return: The beacon_cycle of this SiteTemplateGroupRadioDto.
        :rtype: int
        """
        return self._beacon_cycle

    @beacon_cycle.setter
    def beacon_cycle(self, beacon_cycle):
        """
        Sets the beacon_cycle of this SiteTemplateGroupRadioDto.
        beacon周期。取值范围为60到1000之间的整数。单位（TUs）。

        :param beacon_cycle: The beacon_cycle of this SiteTemplateGroupRadioDto.
        :type: int
        """
        if beacon_cycle is not None and beacon_cycle > 1000:
            raise ValueError("Invalid value for `beacon_cycle`, must be a value less than or equal to `1000`")
        if beacon_cycle is not None and beacon_cycle < 60:
            raise ValueError("Invalid value for `beacon_cycle`, must be a value greater than or equal to `60`")

        self._beacon_cycle = beacon_cycle

    @property
    def dynamic_switch(self):
        """
        Gets the dynamic_switch of this SiteTemplateGroupRadioDto.
        负载均衡。

        :return: The dynamic_switch of this SiteTemplateGroupRadioDto.
        :rtype: bool
        """
        return self._dynamic_switch

    @dynamic_switch.setter
    def dynamic_switch(self, dynamic_switch):
        """
        Sets the dynamic_switch of this SiteTemplateGroupRadioDto.
        负载均衡。

        :param dynamic_switch: The dynamic_switch of this SiteTemplateGroupRadioDto.
        :type: bool
        """

        self._dynamic_switch = dynamic_switch

    @property
    def reference_data_analysis(self):
        """
        Gets the reference_data_analysis of this SiteTemplateGroupRadioDto.
        是否基于历史数据进行射频调优，可选值: true(默认)，false。

        :return: The reference_data_analysis of this SiteTemplateGroupRadioDto.
        :rtype: bool
        """
        return self._reference_data_analysis

    @reference_data_analysis.setter
    def reference_data_analysis(self, reference_data_analysis):
        """
        Sets the reference_data_analysis of this SiteTemplateGroupRadioDto.
        是否基于历史数据进行射频调优，可选值: true(默认)，false。

        :param reference_data_analysis: The reference_data_analysis of this SiteTemplateGroupRadioDto.
        :type: bool
        """

        self._reference_data_analysis = reference_data_analysis

    @property
    def group_radio2g(self):
        """
        Gets the group_radio2g of this SiteTemplateGroupRadioDto.

        :return: The group_radio2g of this SiteTemplateGroupRadioDto.
        :rtype: GroupRadio2gConfigDto
        """
        return self._group_radio2g

    @group_radio2g.setter
    def group_radio2g(self, group_radio2g):
        """
        Sets the group_radio2g of this SiteTemplateGroupRadioDto.

        :param group_radio2g: The group_radio2g of this SiteTemplateGroupRadioDto.
        :type: GroupRadio2gConfigDto
        """

        self._group_radio2g = group_radio2g

    @property
    def group_radio5g(self):
        """
        Gets the group_radio5g of this SiteTemplateGroupRadioDto.

        :return: The group_radio5g of this SiteTemplateGroupRadioDto.
        :rtype: GroupRadio5gConfigDto
        """
        return self._group_radio5g

    @group_radio5g.setter
    def group_radio5g(self, group_radio5g):
        """
        Sets the group_radio5g of this SiteTemplateGroupRadioDto.

        :param group_radio5g: The group_radio5g of this SiteTemplateGroupRadioDto.
        :type: GroupRadio5gConfigDto
        """

        self._group_radio5g = group_radio5g

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, SiteTemplateGroupRadioDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
