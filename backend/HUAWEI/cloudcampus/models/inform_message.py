# coding: utf-8

"""
    链路管理

    链路管理北向接口 

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class InformMessage(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'resource_uri': 'str',
        'msg_type': 'int',
        'data': 'list[LinkModelForWebNotify]',
        'description': 'str',
        'timestamp': 'str'
    }

    attribute_map = {
        'resource_uri': 'resourceURI',
        'msg_type': 'msgType',
        'data': 'data',
        'description': 'description',
        'timestamp': 'timestamp'
    }

    def __init__(self, resource_uri=None, msg_type=None, data=None, description=None, timestamp=None):
        """
        InformMessage - a model defined in Swagger
        """

        self._resource_uri = None
        self._msg_type = None
        self._data = None
        self._description = None
        self._timestamp = None

        if resource_uri is not None:
          self.resource_uri = resource_uri
        if msg_type is not None:
          self.msg_type = msg_type
        if data is not None:
          self.data = data
        if description is not None:
          self.description = description
        if timestamp is not None:
          self.timestamp = timestamp

    @property
    def resource_uri(self):
        """
        Gets the resource_uri of this InformMessage.

        :return: The resource_uri of this InformMessage.
        :rtype: str
        """
        return self._resource_uri

    @resource_uri.setter
    def resource_uri(self, resource_uri):
        """
        Sets the resource_uri of this InformMessage.

        :param resource_uri: The resource_uri of this InformMessage.
        :type: str
        """

        self._resource_uri = resource_uri

    @property
    def msg_type(self):
        """
        Gets the msg_type of this InformMessage.
        消息类型： 1：创建 2：删除 3：修改 

        :return: The msg_type of this InformMessage.
        :rtype: int
        """
        return self._msg_type

    @msg_type.setter
    def msg_type(self, msg_type):
        """
        Sets the msg_type of this InformMessage.
        消息类型： 1：创建 2：删除 3：修改 

        :param msg_type: The msg_type of this InformMessage.
        :type: int
        """

        self._msg_type = msg_type

    @property
    def data(self):
        """
        Gets the data of this InformMessage.

        :return: The data of this InformMessage.
        :rtype: list[LinkModelForWebNotify]
        """
        return self._data

    @data.setter
    def data(self, data):
        """
        Sets the data of this InformMessage.

        :param data: The data of this InformMessage.
        :type: list[LinkModelForWebNotify]
        """

        self._data = data

    @property
    def description(self):
        """
        Gets the description of this InformMessage.

        :return: The description of this InformMessage.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this InformMessage.

        :param description: The description of this InformMessage.
        :type: str
        """

        self._description = description

    @property
    def timestamp(self):
        """
        Gets the timestamp of this InformMessage.

        :return: The timestamp of this InformMessage.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """
        Sets the timestamp of this InformMessage.

        :param timestamp: The timestamp of this InformMessage.
        :type: str
        """

        self._timestamp = timestamp

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, InformMessage):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
