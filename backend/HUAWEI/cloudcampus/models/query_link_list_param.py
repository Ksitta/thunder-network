# coding: utf-8

"""
    链路管理

    链路管理北向接口 

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class QueryLinkListParam(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'anedn': 'str',
        'anename': 'str',
        'aneip': 'str',
        'anestate': 'int',
        'aportdn': 'str',
        'aportname': 'str',
        'aportip': 'str',
        'aportadminstatus': 'int',
        'aportoperstatus': 'int',
        'znedn': 'str',
        'znename': 'str',
        'zneip': 'str',
        'znestate': 'int',
        'zportdn': 'str',
        'zportname': 'str',
        'zportip': 'str',
        'zportadminstatus': 'int',
        'zportoperstatus': 'int',
        'linkdn': 'str',
        'linkname': 'str',
        'linkstatus': 'int',
        'linktype': 'int',
        'speed': 'str',
        'start': 'int',
        'size': 'int',
        'orderby': 'str',
        'desc': 'bool'
    }

    attribute_map = {
        'anedn': 'anedn',
        'anename': 'anename',
        'aneip': 'aneip',
        'anestate': 'anestate',
        'aportdn': 'aportdn',
        'aportname': 'aportname',
        'aportip': 'aportip',
        'aportadminstatus': 'aportadminstatus',
        'aportoperstatus': 'aportoperstatus',
        'znedn': 'znedn',
        'znename': 'znename',
        'zneip': 'zneip',
        'znestate': 'znestate',
        'zportdn': 'zportdn',
        'zportname': 'zportname',
        'zportip': 'zportip',
        'zportadminstatus': 'zportadminstatus',
        'zportoperstatus': 'zportoperstatus',
        'linkdn': 'linkdn',
        'linkname': 'linkname',
        'linkstatus': 'linkstatus',
        'linktype': 'linktype',
        'speed': 'speed',
        'start': 'start',
        'size': 'size',
        'orderby': 'orderby',
        'desc': 'desc'
    }

    def __init__(self, anedn=None, anename=None, aneip=None, anestate=None, aportdn=None, aportname=None, aportip=None, aportadminstatus=None, aportoperstatus=None, znedn=None, znename=None, zneip=None, znestate=None, zportdn=None, zportname=None, zportip=None, zportadminstatus=None, zportoperstatus=None, linkdn=None, linkname=None, linkstatus=None, linktype=None, speed=None, start=None, size=None, orderby='linkdn', desc=False):
        """
        QueryLinkListParam - a model defined in Swagger
        """

        self._anedn = None
        self._anename = None
        self._aneip = None
        self._anestate = None
        self._aportdn = None
        self._aportname = None
        self._aportip = None
        self._aportadminstatus = None
        self._aportoperstatus = None
        self._znedn = None
        self._znename = None
        self._zneip = None
        self._znestate = None
        self._zportdn = None
        self._zportname = None
        self._zportip = None
        self._zportadminstatus = None
        self._zportoperstatus = None
        self._linkdn = None
        self._linkname = None
        self._linkstatus = None
        self._linktype = None
        self._speed = None
        self._start = None
        self._size = None
        self._orderby = None
        self._desc = None

        if anedn is not None:
          self.anedn = anedn
        if anename is not None:
          self.anename = anename
        if aneip is not None:
          self.aneip = aneip
        if anestate is not None:
          self.anestate = anestate
        if aportdn is not None:
          self.aportdn = aportdn
        if aportname is not None:
          self.aportname = aportname
        if aportip is not None:
          self.aportip = aportip
        if aportadminstatus is not None:
          self.aportadminstatus = aportadminstatus
        if aportoperstatus is not None:
          self.aportoperstatus = aportoperstatus
        if znedn is not None:
          self.znedn = znedn
        if znename is not None:
          self.znename = znename
        if zneip is not None:
          self.zneip = zneip
        if znestate is not None:
          self.znestate = znestate
        if zportdn is not None:
          self.zportdn = zportdn
        if zportname is not None:
          self.zportname = zportname
        if zportip is not None:
          self.zportip = zportip
        if zportadminstatus is not None:
          self.zportadminstatus = zportadminstatus
        if zportoperstatus is not None:
          self.zportoperstatus = zportoperstatus
        if linkdn is not None:
          self.linkdn = linkdn
        if linkname is not None:
          self.linkname = linkname
        if linkstatus is not None:
          self.linkstatus = linkstatus
        if linktype is not None:
          self.linktype = linktype
        if speed is not None:
          self.speed = speed
        if start is not None:
          self.start = start
        if size is not None:
          self.size = size
        if orderby is not None:
          self.orderby = orderby
        if desc is not None:
          self.desc = desc

    @property
    def anedn(self):
        """
        Gets the anedn of this QueryLinkListParam.
        源网元DN

        :return: The anedn of this QueryLinkListParam.
        :rtype: str
        """
        return self._anedn

    @anedn.setter
    def anedn(self, anedn):
        """
        Sets the anedn of this QueryLinkListParam.
        源网元DN

        :param anedn: The anedn of this QueryLinkListParam.
        :type: str
        """

        self._anedn = anedn

    @property
    def anename(self):
        """
        Gets the anename of this QueryLinkListParam.
        源网元名称

        :return: The anename of this QueryLinkListParam.
        :rtype: str
        """
        return self._anename

    @anename.setter
    def anename(self, anename):
        """
        Sets the anename of this QueryLinkListParam.
        源网元名称

        :param anename: The anename of this QueryLinkListParam.
        :type: str
        """

        self._anename = anename

    @property
    def aneip(self):
        """
        Gets the aneip of this QueryLinkListParam.
        源网元IP

        :return: The aneip of this QueryLinkListParam.
        :rtype: str
        """
        return self._aneip

    @aneip.setter
    def aneip(self, aneip):
        """
        Sets the aneip of this QueryLinkListParam.
        源网元IP

        :param aneip: The aneip of this QueryLinkListParam.
        :type: str
        """

        self._aneip = aneip

    @property
    def anestate(self):
        """
        Gets the anestate of this QueryLinkListParam.
        0：未管理 1：在线 2：离线 3：未知 

        :return: The anestate of this QueryLinkListParam.
        :rtype: int
        """
        return self._anestate

    @anestate.setter
    def anestate(self, anestate):
        """
        Sets the anestate of this QueryLinkListParam.
        0：未管理 1：在线 2：离线 3：未知 

        :param anestate: The anestate of this QueryLinkListParam.
        :type: int
        """

        self._anestate = anestate

    @property
    def aportdn(self):
        """
        Gets the aportdn of this QueryLinkListParam.
        源端口DN

        :return: The aportdn of this QueryLinkListParam.
        :rtype: str
        """
        return self._aportdn

    @aportdn.setter
    def aportdn(self, aportdn):
        """
        Sets the aportdn of this QueryLinkListParam.
        源端口DN

        :param aportdn: The aportdn of this QueryLinkListParam.
        :type: str
        """

        self._aportdn = aportdn

    @property
    def aportname(self):
        """
        Gets the aportname of this QueryLinkListParam.
        源端口名称

        :return: The aportname of this QueryLinkListParam.
        :rtype: str
        """
        return self._aportname

    @aportname.setter
    def aportname(self, aportname):
        """
        Sets the aportname of this QueryLinkListParam.
        源端口名称

        :param aportname: The aportname of this QueryLinkListParam.
        :type: str
        """

        self._aportname = aportname

    @property
    def aportip(self):
        """
        Gets the aportip of this QueryLinkListParam.
        源端口IP

        :return: The aportip of this QueryLinkListParam.
        :rtype: str
        """
        return self._aportip

    @aportip.setter
    def aportip(self, aportip):
        """
        Sets the aportip of this QueryLinkListParam.
        源端口IP

        :param aportip: The aportip of this QueryLinkListParam.
        :type: str
        """

        self._aportip = aportip

    @property
    def aportadminstatus(self):
        """
        Gets the aportadminstatus of this QueryLinkListParam.
        1：up 2：down 3：testing 

        :return: The aportadminstatus of this QueryLinkListParam.
        :rtype: int
        """
        return self._aportadminstatus

    @aportadminstatus.setter
    def aportadminstatus(self, aportadminstatus):
        """
        Sets the aportadminstatus of this QueryLinkListParam.
        1：up 2：down 3：testing 

        :param aportadminstatus: The aportadminstatus of this QueryLinkListParam.
        :type: int
        """

        self._aportadminstatus = aportadminstatus

    @property
    def aportoperstatus(self):
        """
        Gets the aportoperstatus of this QueryLinkListParam.
        1：up 2：down 3：testing 4：unknown 5：dormant 6：notPresent 7：lowerLayerDown 

        :return: The aportoperstatus of this QueryLinkListParam.
        :rtype: int
        """
        return self._aportoperstatus

    @aportoperstatus.setter
    def aportoperstatus(self, aportoperstatus):
        """
        Sets the aportoperstatus of this QueryLinkListParam.
        1：up 2：down 3：testing 4：unknown 5：dormant 6：notPresent 7：lowerLayerDown 

        :param aportoperstatus: The aportoperstatus of this QueryLinkListParam.
        :type: int
        """

        self._aportoperstatus = aportoperstatus

    @property
    def znedn(self):
        """
        Gets the znedn of this QueryLinkListParam.
        宿网元DN

        :return: The znedn of this QueryLinkListParam.
        :rtype: str
        """
        return self._znedn

    @znedn.setter
    def znedn(self, znedn):
        """
        Sets the znedn of this QueryLinkListParam.
        宿网元DN

        :param znedn: The znedn of this QueryLinkListParam.
        :type: str
        """

        self._znedn = znedn

    @property
    def znename(self):
        """
        Gets the znename of this QueryLinkListParam.
        宿网元名称

        :return: The znename of this QueryLinkListParam.
        :rtype: str
        """
        return self._znename

    @znename.setter
    def znename(self, znename):
        """
        Sets the znename of this QueryLinkListParam.
        宿网元名称

        :param znename: The znename of this QueryLinkListParam.
        :type: str
        """

        self._znename = znename

    @property
    def zneip(self):
        """
        Gets the zneip of this QueryLinkListParam.
        宿网元IP

        :return: The zneip of this QueryLinkListParam.
        :rtype: str
        """
        return self._zneip

    @zneip.setter
    def zneip(self, zneip):
        """
        Sets the zneip of this QueryLinkListParam.
        宿网元IP

        :param zneip: The zneip of this QueryLinkListParam.
        :type: str
        """

        self._zneip = zneip

    @property
    def znestate(self):
        """
        Gets the znestate of this QueryLinkListParam.
        0：未管理 1：在线 2：离线 3：未知 

        :return: The znestate of this QueryLinkListParam.
        :rtype: int
        """
        return self._znestate

    @znestate.setter
    def znestate(self, znestate):
        """
        Sets the znestate of this QueryLinkListParam.
        0：未管理 1：在线 2：离线 3：未知 

        :param znestate: The znestate of this QueryLinkListParam.
        :type: int
        """

        self._znestate = znestate

    @property
    def zportdn(self):
        """
        Gets the zportdn of this QueryLinkListParam.
        宿端口DN

        :return: The zportdn of this QueryLinkListParam.
        :rtype: str
        """
        return self._zportdn

    @zportdn.setter
    def zportdn(self, zportdn):
        """
        Sets the zportdn of this QueryLinkListParam.
        宿端口DN

        :param zportdn: The zportdn of this QueryLinkListParam.
        :type: str
        """

        self._zportdn = zportdn

    @property
    def zportname(self):
        """
        Gets the zportname of this QueryLinkListParam.
        宿端口名称

        :return: The zportname of this QueryLinkListParam.
        :rtype: str
        """
        return self._zportname

    @zportname.setter
    def zportname(self, zportname):
        """
        Sets the zportname of this QueryLinkListParam.
        宿端口名称

        :param zportname: The zportname of this QueryLinkListParam.
        :type: str
        """

        self._zportname = zportname

    @property
    def zportip(self):
        """
        Gets the zportip of this QueryLinkListParam.
        宿端口IP

        :return: The zportip of this QueryLinkListParam.
        :rtype: str
        """
        return self._zportip

    @zportip.setter
    def zportip(self, zportip):
        """
        Sets the zportip of this QueryLinkListParam.
        宿端口IP

        :param zportip: The zportip of this QueryLinkListParam.
        :type: str
        """

        self._zportip = zportip

    @property
    def zportadminstatus(self):
        """
        Gets the zportadminstatus of this QueryLinkListParam.
        1：up 2：down 3：testing 

        :return: The zportadminstatus of this QueryLinkListParam.
        :rtype: int
        """
        return self._zportadminstatus

    @zportadminstatus.setter
    def zportadminstatus(self, zportadminstatus):
        """
        Sets the zportadminstatus of this QueryLinkListParam.
        1：up 2：down 3：testing 

        :param zportadminstatus: The zportadminstatus of this QueryLinkListParam.
        :type: int
        """

        self._zportadminstatus = zportadminstatus

    @property
    def zportoperstatus(self):
        """
        Gets the zportoperstatus of this QueryLinkListParam.
        1：up 2：down 3：testing 4：unknown 5：dormant 6：notPresent 7：lowerLayerDown 

        :return: The zportoperstatus of this QueryLinkListParam.
        :rtype: int
        """
        return self._zportoperstatus

    @zportoperstatus.setter
    def zportoperstatus(self, zportoperstatus):
        """
        Sets the zportoperstatus of this QueryLinkListParam.
        1：up 2：down 3：testing 4：unknown 5：dormant 6：notPresent 7：lowerLayerDown 

        :param zportoperstatus: The zportoperstatus of this QueryLinkListParam.
        :type: int
        """

        self._zportoperstatus = zportoperstatus

    @property
    def linkdn(self):
        """
        Gets the linkdn of this QueryLinkListParam.
        链路DN

        :return: The linkdn of this QueryLinkListParam.
        :rtype: str
        """
        return self._linkdn

    @linkdn.setter
    def linkdn(self, linkdn):
        """
        Sets the linkdn of this QueryLinkListParam.
        链路DN

        :param linkdn: The linkdn of this QueryLinkListParam.
        :type: str
        """

        self._linkdn = linkdn

    @property
    def linkname(self):
        """
        Gets the linkname of this QueryLinkListParam.
        链路名称

        :return: The linkname of this QueryLinkListParam.
        :rtype: str
        """
        return self._linkname

    @linkname.setter
    def linkname(self, linkname):
        """
        Sets the linkname of this QueryLinkListParam.
        链路名称

        :param linkname: The linkname of this QueryLinkListParam.
        :type: str
        """

        self._linkname = linkname

    @property
    def linkstatus(self):
        """
        Gets the linkstatus of this QueryLinkListParam.
        0：正常 1：未知 2：重要故障 3：紧急故障 4：离线 5：不管理 

        :return: The linkstatus of this QueryLinkListParam.
        :rtype: int
        """
        return self._linkstatus

    @linkstatus.setter
    def linkstatus(self, linkstatus):
        """
        Sets the linkstatus of this QueryLinkListParam.
        0：正常 1：未知 2：重要故障 3：紧急故障 4：离线 5：不管理 

        :param linkstatus: The linkstatus of this QueryLinkListParam.
        :type: int
        """

        self._linkstatus = linkstatus

    @property
    def linktype(self):
        """
        Gets the linktype of this QueryLinkListParam.
        1：LLDP 2：Side-By-Side链路 3：MACARP 4：CDP 5：IP 6：由物理链路生成Eth-Trunk链路 99：手工 

        :return: The linktype of this QueryLinkListParam.
        :rtype: int
        """
        return self._linktype

    @linktype.setter
    def linktype(self, linktype):
        """
        Sets the linktype of this QueryLinkListParam.
        1：LLDP 2：Side-By-Side链路 3：MACARP 4：CDP 5：IP 6：由物理链路生成Eth-Trunk链路 99：手工 

        :param linktype: The linktype of this QueryLinkListParam.
        :type: int
        """

        self._linktype = linktype

    @property
    def speed(self):
        """
        Gets the speed of this QueryLinkListParam.
        单位：Mbit/s

        :return: The speed of this QueryLinkListParam.
        :rtype: str
        """
        return self._speed

    @speed.setter
    def speed(self, speed):
        """
        Sets the speed of this QueryLinkListParam.
        单位：Mbit/s

        :param speed: The speed of this QueryLinkListParam.
        :type: str
        """

        self._speed = speed

    @property
    def start(self):
        """
        Gets the start of this QueryLinkListParam.
        指定从哪个起始记录位置开始返回查询结果集。小于0使用缺省值

        :return: The start of this QueryLinkListParam.
        :rtype: int
        """
        return self._start

    @start.setter
    def start(self, start):
        """
        Sets the start of this QueryLinkListParam.
        指定从哪个起始记录位置开始返回查询结果集。小于0使用缺省值

        :param start: The start of this QueryLinkListParam.
        :type: int
        """

        self._start = start

    @property
    def size(self):
        """
        Gets the size of this QueryLinkListParam.
        制定返回查询结果集总数，小于20，则使用缺省值20

        :return: The size of this QueryLinkListParam.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """
        Sets the size of this QueryLinkListParam.
        制定返回查询结果集总数，小于20，则使用缺省值20

        :param size: The size of this QueryLinkListParam.
        :type: int
        """

        self._size = size

    @property
    def orderby(self):
        """
        Gets the orderby of this QueryLinkListParam.
        指定查询结果集的排序字段

        :return: The orderby of this QueryLinkListParam.
        :rtype: str
        """
        return self._orderby

    @orderby.setter
    def orderby(self, orderby):
        """
        Sets the orderby of this QueryLinkListParam.
        指定查询结果集的排序字段

        :param orderby: The orderby of this QueryLinkListParam.
        :type: str
        """

        self._orderby = orderby

    @property
    def desc(self):
        """
        Gets the desc of this QueryLinkListParam.
        指定查询结果是否按照降序排序.只有指定orderby请求参数才生效

        :return: The desc of this QueryLinkListParam.
        :rtype: bool
        """
        return self._desc

    @desc.setter
    def desc(self, desc):
        """
        Sets the desc of this QueryLinkListParam.
        指定查询结果是否按照降序排序.只有指定orderby请求参数才生效

        :param desc: The desc of this QueryLinkListParam.
        :type: bool
        """

        self._desc = desc

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, QueryLinkListParam):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
