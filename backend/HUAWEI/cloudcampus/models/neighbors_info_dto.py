# coding: utf-8

"""
    拓扑管理

    拓扑管理第三方北向接口。 1、查询LACP LAG信息 2、查询LLDP信息 

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class NeighborsInfoDto(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'local_if_name': 'str',
        'remote_if_name': 'str',
        'sys_name': 'str',
        'sys_description': 'str',
        'remote_mac': 'str',
        'sys_cap_enabled': 'str',
        'sys_cap_supported': 'str'
    }

    attribute_map = {
        'local_if_name': 'localIfName',
        'remote_if_name': 'remoteIfName',
        'sys_name': 'sysName',
        'sys_description': 'sysDescription',
        'remote_mac': 'remoteMac',
        'sys_cap_enabled': 'sysCapEnabled',
        'sys_cap_supported': 'sysCapSupported'
    }

    def __init__(self, local_if_name=None, remote_if_name=None, sys_name=None, sys_description=None, remote_mac=None, sys_cap_enabled=None, sys_cap_supported=None):
        """
        NeighborsInfoDto - a model defined in Swagger
        """

        self._local_if_name = None
        self._remote_if_name = None
        self._sys_name = None
        self._sys_description = None
        self._remote_mac = None
        self._sys_cap_enabled = None
        self._sys_cap_supported = None

        if local_if_name is not None:
          self.local_if_name = local_if_name
        if remote_if_name is not None:
          self.remote_if_name = remote_if_name
        if sys_name is not None:
          self.sys_name = sys_name
        if sys_description is not None:
          self.sys_description = sys_description
        if remote_mac is not None:
          self.remote_mac = remote_mac
        if sys_cap_enabled is not None:
          self.sys_cap_enabled = sys_cap_enabled
        if sys_cap_supported is not None:
          self.sys_cap_supported = sys_cap_supported

    @property
    def local_if_name(self):
        """
        Gets the local_if_name of this NeighborsInfoDto.
        本端接口名称。

        :return: The local_if_name of this NeighborsInfoDto.
        :rtype: str
        """
        return self._local_if_name

    @local_if_name.setter
    def local_if_name(self, local_if_name):
        """
        Sets the local_if_name of this NeighborsInfoDto.
        本端接口名称。

        :param local_if_name: The local_if_name of this NeighborsInfoDto.
        :type: str
        """

        self._local_if_name = local_if_name

    @property
    def remote_if_name(self):
        """
        Gets the remote_if_name of this NeighborsInfoDto.
        远端接口名称。

        :return: The remote_if_name of this NeighborsInfoDto.
        :rtype: str
        """
        return self._remote_if_name

    @remote_if_name.setter
    def remote_if_name(self, remote_if_name):
        """
        Sets the remote_if_name of this NeighborsInfoDto.
        远端接口名称。

        :param remote_if_name: The remote_if_name of this NeighborsInfoDto.
        :type: str
        """

        self._remote_if_name = remote_if_name

    @property
    def sys_name(self):
        """
        Gets the sys_name of this NeighborsInfoDto.
        远端系统名称。

        :return: The sys_name of this NeighborsInfoDto.
        :rtype: str
        """
        return self._sys_name

    @sys_name.setter
    def sys_name(self, sys_name):
        """
        Sets the sys_name of this NeighborsInfoDto.
        远端系统名称。

        :param sys_name: The sys_name of this NeighborsInfoDto.
        :type: str
        """

        self._sys_name = sys_name

    @property
    def sys_description(self):
        """
        Gets the sys_description of this NeighborsInfoDto.
        远端系统描述。

        :return: The sys_description of this NeighborsInfoDto.
        :rtype: str
        """
        return self._sys_description

    @sys_description.setter
    def sys_description(self, sys_description):
        """
        Sets the sys_description of this NeighborsInfoDto.
        远端系统描述。

        :param sys_description: The sys_description of this NeighborsInfoDto.
        :type: str
        """

        self._sys_description = sys_description

    @property
    def remote_mac(self):
        """
        Gets the remote_mac of this NeighborsInfoDto.
        远端系统MAC。

        :return: The remote_mac of this NeighborsInfoDto.
        :rtype: str
        """
        return self._remote_mac

    @remote_mac.setter
    def remote_mac(self, remote_mac):
        """
        Sets the remote_mac of this NeighborsInfoDto.
        远端系统MAC。

        :param remote_mac: The remote_mac of this NeighborsInfoDto.
        :type: str
        """

        self._remote_mac = remote_mac

    @property
    def sys_cap_enabled(self):
        """
        Gets the sys_cap_enabled of this NeighborsInfoDto.
        对端设备支持的能力：cap-other、cap-repeater、cap-bridge、cap-wlan-access-point、cap-router、cap-telephone、cap-docsis-cable-device、cap-station-only；多个能力时以空格间隔。

        :return: The sys_cap_enabled of this NeighborsInfoDto.
        :rtype: str
        """
        return self._sys_cap_enabled

    @sys_cap_enabled.setter
    def sys_cap_enabled(self, sys_cap_enabled):
        """
        Sets the sys_cap_enabled of this NeighborsInfoDto.
        对端设备支持的能力：cap-other、cap-repeater、cap-bridge、cap-wlan-access-point、cap-router、cap-telephone、cap-docsis-cable-device、cap-station-only；多个能力时以空格间隔。

        :param sys_cap_enabled: The sys_cap_enabled of this NeighborsInfoDto.
        :type: str
        """

        self._sys_cap_enabled = sys_cap_enabled

    @property
    def sys_cap_supported(self):
        """
        Gets the sys_cap_supported of this NeighborsInfoDto.
        对端设备使能的能力：cap-other、cap-repeater、cap-bridge、cap-wlan-access-point、cap-router、cap-telephone、cap-docsis-cable-device、cap-station-only；多个能力时以空格间隔。

        :return: The sys_cap_supported of this NeighborsInfoDto.
        :rtype: str
        """
        return self._sys_cap_supported

    @sys_cap_supported.setter
    def sys_cap_supported(self, sys_cap_supported):
        """
        Sets the sys_cap_supported of this NeighborsInfoDto.
        对端设备使能的能力：cap-other、cap-repeater、cap-bridge、cap-wlan-access-point、cap-router、cap-telephone、cap-docsis-cable-device、cap-station-only；多个能力时以空格间隔。

        :param sys_cap_supported: The sys_cap_supported of this NeighborsInfoDto.
        :type: str
        """

        self._sys_cap_supported = sys_cap_supported

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, NeighborsInfoDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
