# coding: utf-8

"""
    链路管理

    链路管理北向接口 

    OpenAPI spec version: 1.0.0
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class ItChangeMessage(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'msg_type': 'int',
        'resource_uri': 'str',
        'module_id': 'str',
        'data_object_json': 'list[DataObjectJson]',
        'utc_timestamp': 'int'
    }

    attribute_map = {
        'msg_type': 'msgType',
        'resource_uri': 'resourceURI',
        'module_id': 'moduleID',
        'data_object_json': 'dataObjectJson',
        'utc_timestamp': 'utcTimestamp'
    }

    def __init__(self, msg_type=None, resource_uri='/rest/openapi/notification/it/link', module_id='com.huawei.it.link.notification', data_object_json=None, utc_timestamp=None):
        """
        ItChangeMessage - a model defined in Swagger
        """

        self._msg_type = None
        self._resource_uri = None
        self._module_id = None
        self._data_object_json = None
        self._utc_timestamp = None

        if msg_type is not None:
          self.msg_type = msg_type
        if resource_uri is not None:
          self.resource_uri = resource_uri
        if module_id is not None:
          self.module_id = module_id
        if data_object_json is not None:
          self.data_object_json = data_object_json
        if utc_timestamp is not None:
          self.utc_timestamp = utc_timestamp

    @property
    def msg_type(self):
        """
        Gets the msg_type of this ItChangeMessage.
        消息类型： 1：创建 2：删除 

        :return: The msg_type of this ItChangeMessage.
        :rtype: int
        """
        return self._msg_type

    @msg_type.setter
    def msg_type(self, msg_type):
        """
        Sets the msg_type of this ItChangeMessage.
        消息类型： 1：创建 2：删除 

        :param msg_type: The msg_type of this ItChangeMessage.
        :type: int
        """

        self._msg_type = msg_type

    @property
    def resource_uri(self):
        """
        Gets the resource_uri of this ItChangeMessage.

        :return: The resource_uri of this ItChangeMessage.
        :rtype: str
        """
        return self._resource_uri

    @resource_uri.setter
    def resource_uri(self, resource_uri):
        """
        Sets the resource_uri of this ItChangeMessage.

        :param resource_uri: The resource_uri of this ItChangeMessage.
        :type: str
        """

        self._resource_uri = resource_uri

    @property
    def module_id(self):
        """
        Gets the module_id of this ItChangeMessage.
        模块ID

        :return: The module_id of this ItChangeMessage.
        :rtype: str
        """
        return self._module_id

    @module_id.setter
    def module_id(self, module_id):
        """
        Sets the module_id of this ItChangeMessage.
        模块ID

        :param module_id: The module_id of this ItChangeMessage.
        :type: str
        """

        self._module_id = module_id

    @property
    def data_object_json(self):
        """
        Gets the data_object_json of this ItChangeMessage.
        数据内容，为一个JSON 化的对象，此处应当link信息。

        :return: The data_object_json of this ItChangeMessage.
        :rtype: list[DataObjectJson]
        """
        return self._data_object_json

    @data_object_json.setter
    def data_object_json(self, data_object_json):
        """
        Sets the data_object_json of this ItChangeMessage.
        数据内容，为一个JSON 化的对象，此处应当link信息。

        :param data_object_json: The data_object_json of this ItChangeMessage.
        :type: list[DataObjectJson]
        """

        self._data_object_json = data_object_json

    @property
    def utc_timestamp(self):
        """
        Gets the utc_timestamp of this ItChangeMessage.
        该事件对象产生的UTC时刻

        :return: The utc_timestamp of this ItChangeMessage.
        :rtype: int
        """
        return self._utc_timestamp

    @utc_timestamp.setter
    def utc_timestamp(self, utc_timestamp):
        """
        Sets the utc_timestamp of this ItChangeMessage.
        该事件对象产生的UTC时刻

        :param utc_timestamp: The utc_timestamp of this ItChangeMessage.
        :type: int
        """

        self._utc_timestamp = utc_timestamp

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, ItChangeMessage):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
