# coding: utf-8

"""
    RADIUS模板管理

    RADIUS模板配置第三方北向接口说明。 

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class UpdateRadiusTempDto(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'name': 'str',
        'description': 'str',
        'master_auth_server': 'RadiusTempDtoMasterAuthServer',
        'slave_auth_server': 'RadiusTempDtoSlaveAuthServer',
        'master_account_server': 'RadiusTempDtoMasterAccountServer',
        'slave_account_server': 'RadiusTempDtoSlaveAccountServer',
        'realtime_accounting': 'RadiusTempDtoRealtimeAccounting',
        'prohibit_attribute': 'RadiusTempDtoProhibitAttribute',
        'called_station_id': 'RadiusTempDtoCalledStationId',
        'share_key': 'str'
    }

    attribute_map = {
        'name': 'name',
        'description': 'description',
        'master_auth_server': 'masterAuthServer',
        'slave_auth_server': 'slaveAuthServer',
        'master_account_server': 'masterAccountServer',
        'slave_account_server': 'slaveAccountServer',
        'realtime_accounting': 'realtimeAccounting',
        'prohibit_attribute': 'prohibitAttribute',
        'called_station_id': 'calledStationId',
        'share_key': 'shareKey'
    }

    def __init__(self, name=None, description=None, master_auth_server=None, slave_auth_server=None, master_account_server=None, slave_account_server=None, realtime_accounting=None, prohibit_attribute=None, called_station_id=None, share_key=None):
        """
        UpdateRadiusTempDto - a model defined in Swagger
        """

        self._name = None
        self._description = None
        self._master_auth_server = None
        self._slave_auth_server = None
        self._master_account_server = None
        self._slave_account_server = None
        self._realtime_accounting = None
        self._prohibit_attribute = None
        self._called_station_id = None
        self._share_key = None

        if name is not None:
          self.name = name
        if description is not None:
          self.description = description
        if master_auth_server is not None:
          self.master_auth_server = master_auth_server
        if slave_auth_server is not None:
          self.slave_auth_server = slave_auth_server
        if master_account_server is not None:
          self.master_account_server = master_account_server
        if slave_account_server is not None:
          self.slave_account_server = slave_account_server
        if realtime_accounting is not None:
          self.realtime_accounting = realtime_accounting
        if prohibit_attribute is not None:
          self.prohibit_attribute = prohibit_attribute
        if called_station_id is not None:
          self.called_station_id = called_station_id
        if share_key is not None:
          self.share_key = share_key

    @property
    def name(self):
        """
        Gets the name of this UpdateRadiusTempDto.
        RADIUS模板名称不能包含特殊字符 ~ $ @ # & ? = + % * ( ) { } < > ] [ ^ ! , : ; ` ' / | \\ \"，且不能单独以-或- -作为模板名称。

        :return: The name of this UpdateRadiusTempDto.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """
        Sets the name of this UpdateRadiusTempDto.
        RADIUS模板名称不能包含特殊字符 ~ $ @ # & ? = + % * ( ) { } < > ] [ ^ ! , : ; ` ' / | \\ \"，且不能单独以-或- -作为模板名称。

        :param name: The name of this UpdateRadiusTempDto.
        :type: str
        """
        if name is not None and len(name) > 32:
            raise ValueError("Invalid value for `name`, length must be less than or equal to `32`")
        if name is not None and len(name) < 1:
            raise ValueError("Invalid value for `name`, length must be greater than or equal to `1`")

        self._name = name

    @property
    def description(self):
        """
        Gets the description of this UpdateRadiusTempDto.
        RADIUS模板描述。

        :return: The description of this UpdateRadiusTempDto.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """
        Sets the description of this UpdateRadiusTempDto.
        RADIUS模板描述。

        :param description: The description of this UpdateRadiusTempDto.
        :type: str
        """
        if description is not None and len(description) > 256:
            raise ValueError("Invalid value for `description`, length must be less than or equal to `256`")
        if description is not None and len(description) < 0:
            raise ValueError("Invalid value for `description`, length must be greater than or equal to `0`")

        self._description = description

    @property
    def master_auth_server(self):
        """
        Gets the master_auth_server of this UpdateRadiusTempDto.

        :return: The master_auth_server of this UpdateRadiusTempDto.
        :rtype: RadiusTempDtoMasterAuthServer
        """
        return self._master_auth_server

    @master_auth_server.setter
    def master_auth_server(self, master_auth_server):
        """
        Sets the master_auth_server of this UpdateRadiusTempDto.

        :param master_auth_server: The master_auth_server of this UpdateRadiusTempDto.
        :type: RadiusTempDtoMasterAuthServer
        """

        self._master_auth_server = master_auth_server

    @property
    def slave_auth_server(self):
        """
        Gets the slave_auth_server of this UpdateRadiusTempDto.

        :return: The slave_auth_server of this UpdateRadiusTempDto.
        :rtype: RadiusTempDtoSlaveAuthServer
        """
        return self._slave_auth_server

    @slave_auth_server.setter
    def slave_auth_server(self, slave_auth_server):
        """
        Sets the slave_auth_server of this UpdateRadiusTempDto.

        :param slave_auth_server: The slave_auth_server of this UpdateRadiusTempDto.
        :type: RadiusTempDtoSlaveAuthServer
        """

        self._slave_auth_server = slave_auth_server

    @property
    def master_account_server(self):
        """
        Gets the master_account_server of this UpdateRadiusTempDto.

        :return: The master_account_server of this UpdateRadiusTempDto.
        :rtype: RadiusTempDtoMasterAccountServer
        """
        return self._master_account_server

    @master_account_server.setter
    def master_account_server(self, master_account_server):
        """
        Sets the master_account_server of this UpdateRadiusTempDto.

        :param master_account_server: The master_account_server of this UpdateRadiusTempDto.
        :type: RadiusTempDtoMasterAccountServer
        """

        self._master_account_server = master_account_server

    @property
    def slave_account_server(self):
        """
        Gets the slave_account_server of this UpdateRadiusTempDto.

        :return: The slave_account_server of this UpdateRadiusTempDto.
        :rtype: RadiusTempDtoSlaveAccountServer
        """
        return self._slave_account_server

    @slave_account_server.setter
    def slave_account_server(self, slave_account_server):
        """
        Sets the slave_account_server of this UpdateRadiusTempDto.

        :param slave_account_server: The slave_account_server of this UpdateRadiusTempDto.
        :type: RadiusTempDtoSlaveAccountServer
        """

        self._slave_account_server = slave_account_server

    @property
    def realtime_accounting(self):
        """
        Gets the realtime_accounting of this UpdateRadiusTempDto.

        :return: The realtime_accounting of this UpdateRadiusTempDto.
        :rtype: RadiusTempDtoRealtimeAccounting
        """
        return self._realtime_accounting

    @realtime_accounting.setter
    def realtime_accounting(self, realtime_accounting):
        """
        Sets the realtime_accounting of this UpdateRadiusTempDto.

        :param realtime_accounting: The realtime_accounting of this UpdateRadiusTempDto.
        :type: RadiusTempDtoRealtimeAccounting
        """

        self._realtime_accounting = realtime_accounting

    @property
    def prohibit_attribute(self):
        """
        Gets the prohibit_attribute of this UpdateRadiusTempDto.

        :return: The prohibit_attribute of this UpdateRadiusTempDto.
        :rtype: RadiusTempDtoProhibitAttribute
        """
        return self._prohibit_attribute

    @prohibit_attribute.setter
    def prohibit_attribute(self, prohibit_attribute):
        """
        Sets the prohibit_attribute of this UpdateRadiusTempDto.

        :param prohibit_attribute: The prohibit_attribute of this UpdateRadiusTempDto.
        :type: RadiusTempDtoProhibitAttribute
        """

        self._prohibit_attribute = prohibit_attribute

    @property
    def called_station_id(self):
        """
        Gets the called_station_id of this UpdateRadiusTempDto.

        :return: The called_station_id of this UpdateRadiusTempDto.
        :rtype: RadiusTempDtoCalledStationId
        """
        return self._called_station_id

    @called_station_id.setter
    def called_station_id(self, called_station_id):
        """
        Sets the called_station_id of this UpdateRadiusTempDto.

        :param called_station_id: The called_station_id of this UpdateRadiusTempDto.
        :type: RadiusTempDtoCalledStationId
        """

        self._called_station_id = called_station_id

    @property
    def share_key(self):
        """
        Gets the share_key of this UpdateRadiusTempDto.
        密钥（英文字母、数字、除空格和问号外特殊符号，且不能全为*，建议长度为6位以上）。

        :return: The share_key of this UpdateRadiusTempDto.
        :rtype: str
        """
        return self._share_key

    @share_key.setter
    def share_key(self, share_key):
        """
        Sets the share_key of this UpdateRadiusTempDto.
        密钥（英文字母、数字、除空格和问号外特殊符号，且不能全为*，建议长度为6位以上）。

        :param share_key: The share_key of this UpdateRadiusTempDto.
        :type: str
        """
        if share_key is not None and len(share_key) > 128:
            raise ValueError("Invalid value for `share_key`, length must be less than or equal to `128`")
        if share_key is not None and len(share_key) < 1:
            raise ValueError("Invalid value for `share_key`, length must be greater than or equal to `1`")

        self._share_key = share_key

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, UpdateRadiusTempDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
