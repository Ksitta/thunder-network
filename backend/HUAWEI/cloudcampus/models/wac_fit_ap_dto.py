# coding: utf-8

"""
    WAC关联Fit AP管理

    WAC关联Fit AP第三方接口，主要特性：  · 根据指定的WAC设备ID查询关联的Fit AP列表 · 根据指定的WAC设备关联Fit AP列表 · 根据指定的WAC设备解除关联的Fit AP列表 

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class WACFitApDto(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'site_ap_info_list': 'list[SiteApInfo]'
    }

    attribute_map = {
        'site_ap_info_list': 'siteApInfoList'
    }

    def __init__(self, site_ap_info_list=None):
        """
        WACFitApDto - a model defined in Swagger
        """

        self._site_ap_info_list = None

        if site_ap_info_list is not None:
          self.site_ap_info_list = site_ap_info_list

    @property
    def site_ap_info_list(self):
        """
        Gets the site_ap_info_list of this WACFitApDto.
        站点内操作的Fit AP的列表。

        :return: The site_ap_info_list of this WACFitApDto.
        :rtype: list[SiteApInfo]
        """
        return self._site_ap_info_list

    @site_ap_info_list.setter
    def site_ap_info_list(self, site_ap_info_list):
        """
        Sets the site_ap_info_list of this WACFitApDto.
        站点内操作的Fit AP的列表。

        :param site_ap_info_list: The site_ap_info_list of this WACFitApDto.
        :type: list[SiteApInfo]
        """

        self._site_ap_info_list = site_ap_info_list

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, WACFitApDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
