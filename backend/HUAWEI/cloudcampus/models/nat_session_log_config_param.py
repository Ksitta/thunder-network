# coding: utf-8

"""
    站点内AP设备Nat日志上报开关

    · 查询站点内AP设备Nat日志上报配置 · 配置站点内AP设备Nat日志上报信息 

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class NatSessionLogConfigParam(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'nat_session_log_enable': 'bool',
        'log_interval': 'int',
        'binary_nat_session_log_enable': 'bool',
        'binary_log_host_address': 'str',
        'binary_log_host_port': 'int',
        'binary_log_src_port': 'int'
    }

    attribute_map = {
        'nat_session_log_enable': 'natSessionLogEnable',
        'log_interval': 'logInterval',
        'binary_nat_session_log_enable': 'binaryNatSessionLogEnable',
        'binary_log_host_address': 'binaryLogHostAddress',
        'binary_log_host_port': 'binaryLogHostPort',
        'binary_log_src_port': 'binaryLogSrcPort'
    }

    def __init__(self, nat_session_log_enable=None, log_interval=None, binary_nat_session_log_enable=None, binary_log_host_address=None, binary_log_host_port=None, binary_log_src_port=None):
        """
        NatSessionLogConfigParam - a model defined in Swagger
        """

        self._nat_session_log_enable = None
        self._log_interval = None
        self._binary_nat_session_log_enable = None
        self._binary_log_host_address = None
        self._binary_log_host_port = None
        self._binary_log_src_port = None

        if nat_session_log_enable is not None:
          self.nat_session_log_enable = nat_session_log_enable
        if log_interval is not None:
          self.log_interval = log_interval
        if binary_nat_session_log_enable is not None:
          self.binary_nat_session_log_enable = binary_nat_session_log_enable
        if binary_log_host_address is not None:
          self.binary_log_host_address = binary_log_host_address
        if binary_log_host_port is not None:
          self.binary_log_host_port = binary_log_host_port
        if binary_log_src_port is not None:
          self.binary_log_src_port = binary_log_src_port

    @property
    def nat_session_log_enable(self):
        """
        Gets the nat_session_log_enable of this NatSessionLogConfigParam.
        Nat日志上报使能开关。当natSessionLogEnable为true时，logInterval，binaryNatSessionLogEnable生效。

        :return: The nat_session_log_enable of this NatSessionLogConfigParam.
        :rtype: bool
        """
        return self._nat_session_log_enable

    @nat_session_log_enable.setter
    def nat_session_log_enable(self, nat_session_log_enable):
        """
        Sets the nat_session_log_enable of this NatSessionLogConfigParam.
        Nat日志上报使能开关。当natSessionLogEnable为true时，logInterval，binaryNatSessionLogEnable生效。

        :param nat_session_log_enable: The nat_session_log_enable of this NatSessionLogConfigParam.
        :type: bool
        """

        self._nat_session_log_enable = nat_session_log_enable

    @property
    def log_interval(self):
        """
        Gets the log_interval of this NatSessionLogConfigParam.
        Nat日志上报时间间隔，单位：s，默认30s。

        :return: The log_interval of this NatSessionLogConfigParam.
        :rtype: int
        """
        return self._log_interval

    @log_interval.setter
    def log_interval(self, log_interval):
        """
        Sets the log_interval of this NatSessionLogConfigParam.
        Nat日志上报时间间隔，单位：s，默认30s。

        :param log_interval: The log_interval of this NatSessionLogConfigParam.
        :type: int
        """
        if log_interval is not None and log_interval > 400:
            raise ValueError("Invalid value for `log_interval`, must be a value less than or equal to `400`")
        if log_interval is not None and log_interval < 1:
            raise ValueError("Invalid value for `log_interval`, must be a value greater than or equal to `1`")

        self._log_interval = log_interval

    @property
    def binary_nat_session_log_enable(self):
        """
        Gets the binary_nat_session_log_enable of this NatSessionLogConfigParam.
        二进制格式的日志上报开关。当binaryNatSessionLogEnable为true时，binaryLogHostAddress，binaryLogHostPort，binaryLogSrcPort生效。当binaryNatSessionLogEnable为false时，Nat日志上报的格式为文本。

        :return: The binary_nat_session_log_enable of this NatSessionLogConfigParam.
        :rtype: bool
        """
        return self._binary_nat_session_log_enable

    @binary_nat_session_log_enable.setter
    def binary_nat_session_log_enable(self, binary_nat_session_log_enable):
        """
        Sets the binary_nat_session_log_enable of this NatSessionLogConfigParam.
        二进制格式的日志上报开关。当binaryNatSessionLogEnable为true时，binaryLogHostAddress，binaryLogHostPort，binaryLogSrcPort生效。当binaryNatSessionLogEnable为false时，Nat日志上报的格式为文本。

        :param binary_nat_session_log_enable: The binary_nat_session_log_enable of this NatSessionLogConfigParam.
        :type: bool
        """

        self._binary_nat_session_log_enable = binary_nat_session_log_enable

    @property
    def binary_log_host_address(self):
        """
        Gets the binary_log_host_address of this NatSessionLogConfigParam.
        二进制上报日志目标服务器IP地址。

        :return: The binary_log_host_address of this NatSessionLogConfigParam.
        :rtype: str
        """
        return self._binary_log_host_address

    @binary_log_host_address.setter
    def binary_log_host_address(self, binary_log_host_address):
        """
        Sets the binary_log_host_address of this NatSessionLogConfigParam.
        二进制上报日志目标服务器IP地址。

        :param binary_log_host_address: The binary_log_host_address of this NatSessionLogConfigParam.
        :type: str
        """

        self._binary_log_host_address = binary_log_host_address

    @property
    def binary_log_host_port(self):
        """
        Gets the binary_log_host_port of this NatSessionLogConfigParam.
        二进制上报日志目标服务器端口号，范围为：1-65535。

        :return: The binary_log_host_port of this NatSessionLogConfigParam.
        :rtype: int
        """
        return self._binary_log_host_port

    @binary_log_host_port.setter
    def binary_log_host_port(self, binary_log_host_port):
        """
        Sets the binary_log_host_port of this NatSessionLogConfigParam.
        二进制上报日志目标服务器端口号，范围为：1-65535。

        :param binary_log_host_port: The binary_log_host_port of this NatSessionLogConfigParam.
        :type: int
        """
        if binary_log_host_port is not None and binary_log_host_port > 65535:
            raise ValueError("Invalid value for `binary_log_host_port`, must be a value less than or equal to `65535`")
        if binary_log_host_port is not None and binary_log_host_port < 1:
            raise ValueError("Invalid value for `binary_log_host_port`, must be a value greater than or equal to `1`")

        self._binary_log_host_port = binary_log_host_port

    @property
    def binary_log_src_port(self):
        """
        Gets the binary_log_src_port of this NatSessionLogConfigParam.
        二进制上报日志设备源端口号，范围为：10240-55534。

        :return: The binary_log_src_port of this NatSessionLogConfigParam.
        :rtype: int
        """
        return self._binary_log_src_port

    @binary_log_src_port.setter
    def binary_log_src_port(self, binary_log_src_port):
        """
        Sets the binary_log_src_port of this NatSessionLogConfigParam.
        二进制上报日志设备源端口号，范围为：10240-55534。

        :param binary_log_src_port: The binary_log_src_port of this NatSessionLogConfigParam.
        :type: int
        """
        if binary_log_src_port is not None and binary_log_src_port > 55534:
            raise ValueError("Invalid value for `binary_log_src_port`, must be a value less than or equal to `55534`")
        if binary_log_src_port is not None and binary_log_src_port < 10240:
            raise ValueError("Invalid value for `binary_log_src_port`, must be a value greater than or equal to `10240`")

        self._binary_log_src_port = binary_log_src_port

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, NatSessionLogConfigParam):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
