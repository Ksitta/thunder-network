# coding: utf-8

"""
    Portal在线用户查询

    查询Portal在线用户第三方北向接口。提供了Portal在线用户的查询、强制下线接口。 

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class PortalOnlineUserInfoDto(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'user_id': 'str',
        'user_name': 'str',
        'user_group_id': 'str',
        'user_group_name': 'str',
        'site_id': 'str',
        'login_time': 'int',
        'device_id': 'str',
        'access_policy': 'str',
        'onlineuser_terminal_ip': 'str',
        'terminal_mac': 'str',
        'ssid': 'str',
        'auth_mode': 'str',
        'user_type': 'str'
    }

    attribute_map = {
        'id': 'id',
        'user_id': 'userId',
        'user_name': 'userName',
        'user_group_id': 'userGroupId',
        'user_group_name': 'userGroupName',
        'site_id': 'siteId',
        'login_time': 'loginTime',
        'device_id': 'deviceId',
        'access_policy': 'accessPolicy',
        'onlineuser_terminal_ip': 'onlineuserTerminalIp',
        'terminal_mac': 'terminalMac',
        'ssid': 'ssid',
        'auth_mode': 'authMode',
        'user_type': 'userType'
    }

    def __init__(self, id=None, user_id=None, user_name=None, user_group_id=None, user_group_name=None, site_id=None, login_time=None, device_id=None, access_policy=None, onlineuser_terminal_ip=None, terminal_mac=None, ssid=None, auth_mode=None, user_type=None):
        """
        PortalOnlineUserInfoDto - a model defined in Swagger
        """

        self._id = None
        self._user_id = None
        self._user_name = None
        self._user_group_id = None
        self._user_group_name = None
        self._site_id = None
        self._login_time = None
        self._device_id = None
        self._access_policy = None
        self._onlineuser_terminal_ip = None
        self._terminal_mac = None
        self._ssid = None
        self._auth_mode = None
        self._user_type = None

        if id is not None:
          self.id = id
        if user_id is not None:
          self.user_id = user_id
        if user_name is not None:
          self.user_name = user_name
        if user_group_id is not None:
          self.user_group_id = user_group_id
        if user_group_name is not None:
          self.user_group_name = user_group_name
        if site_id is not None:
          self.site_id = site_id
        if login_time is not None:
          self.login_time = login_time
        if device_id is not None:
          self.device_id = device_id
        if access_policy is not None:
          self.access_policy = access_policy
        if onlineuser_terminal_ip is not None:
          self.onlineuser_terminal_ip = onlineuser_terminal_ip
        if terminal_mac is not None:
          self.terminal_mac = terminal_mac
        if ssid is not None:
          self.ssid = ssid
        if auth_mode is not None:
          self.auth_mode = auth_mode
        if user_type is not None:
          self.user_type = user_type

    @property
    def id(self):
        """
        Gets the id of this PortalOnlineUserInfoDto.
        在线用户ID。

        :return: The id of this PortalOnlineUserInfoDto.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """
        Sets the id of this PortalOnlineUserInfoDto.
        在线用户ID。

        :param id: The id of this PortalOnlineUserInfoDto.
        :type: str
        """

        self._id = id

    @property
    def user_id(self):
        """
        Gets the user_id of this PortalOnlineUserInfoDto.
        用户ID。

        :return: The user_id of this PortalOnlineUserInfoDto.
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """
        Sets the user_id of this PortalOnlineUserInfoDto.
        用户ID。

        :param user_id: The user_id of this PortalOnlineUserInfoDto.
        :type: str
        """

        self._user_id = user_id

    @property
    def user_name(self):
        """
        Gets the user_name of this PortalOnlineUserInfoDto.
        用户名。

        :return: The user_name of this PortalOnlineUserInfoDto.
        :rtype: str
        """
        return self._user_name

    @user_name.setter
    def user_name(self, user_name):
        """
        Sets the user_name of this PortalOnlineUserInfoDto.
        用户名。

        :param user_name: The user_name of this PortalOnlineUserInfoDto.
        :type: str
        """

        self._user_name = user_name

    @property
    def user_group_id(self):
        """
        Gets the user_group_id of this PortalOnlineUserInfoDto.
        用户组ID。

        :return: The user_group_id of this PortalOnlineUserInfoDto.
        :rtype: str
        """
        return self._user_group_id

    @user_group_id.setter
    def user_group_id(self, user_group_id):
        """
        Sets the user_group_id of this PortalOnlineUserInfoDto.
        用户组ID。

        :param user_group_id: The user_group_id of this PortalOnlineUserInfoDto.
        :type: str
        """

        self._user_group_id = user_group_id

    @property
    def user_group_name(self):
        """
        Gets the user_group_name of this PortalOnlineUserInfoDto.
        用户组名。

        :return: The user_group_name of this PortalOnlineUserInfoDto.
        :rtype: str
        """
        return self._user_group_name

    @user_group_name.setter
    def user_group_name(self, user_group_name):
        """
        Sets the user_group_name of this PortalOnlineUserInfoDto.
        用户组名。

        :param user_group_name: The user_group_name of this PortalOnlineUserInfoDto.
        :type: str
        """

        self._user_group_name = user_group_name

    @property
    def site_id(self):
        """
        Gets the site_id of this PortalOnlineUserInfoDto.
        站点ID。

        :return: The site_id of this PortalOnlineUserInfoDto.
        :rtype: str
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """
        Sets the site_id of this PortalOnlineUserInfoDto.
        站点ID。

        :param site_id: The site_id of this PortalOnlineUserInfoDto.
        :type: str
        """

        self._site_id = site_id

    @property
    def login_time(self):
        """
        Gets the login_time of this PortalOnlineUserInfoDto.
        登录时间。

        :return: The login_time of this PortalOnlineUserInfoDto.
        :rtype: int
        """
        return self._login_time

    @login_time.setter
    def login_time(self, login_time):
        """
        Sets the login_time of this PortalOnlineUserInfoDto.
        登录时间。

        :param login_time: The login_time of this PortalOnlineUserInfoDto.
        :type: int
        """

        self._login_time = login_time

    @property
    def device_id(self):
        """
        Gets the device_id of this PortalOnlineUserInfoDto.
        设备ID。

        :return: The device_id of this PortalOnlineUserInfoDto.
        :rtype: str
        """
        return self._device_id

    @device_id.setter
    def device_id(self, device_id):
        """
        Sets the device_id of this PortalOnlineUserInfoDto.
        设备ID。

        :param device_id: The device_id of this PortalOnlineUserInfoDto.
        :type: str
        """

        self._device_id = device_id

    @property
    def access_policy(self):
        """
        Gets the access_policy of this PortalOnlineUserInfoDto.
        认证策略名。

        :return: The access_policy of this PortalOnlineUserInfoDto.
        :rtype: str
        """
        return self._access_policy

    @access_policy.setter
    def access_policy(self, access_policy):
        """
        Sets the access_policy of this PortalOnlineUserInfoDto.
        认证策略名。

        :param access_policy: The access_policy of this PortalOnlineUserInfoDto.
        :type: str
        """

        self._access_policy = access_policy

    @property
    def onlineuser_terminal_ip(self):
        """
        Gets the onlineuser_terminal_ip of this PortalOnlineUserInfoDto.
        认证终端IP。

        :return: The onlineuser_terminal_ip of this PortalOnlineUserInfoDto.
        :rtype: str
        """
        return self._onlineuser_terminal_ip

    @onlineuser_terminal_ip.setter
    def onlineuser_terminal_ip(self, onlineuser_terminal_ip):
        """
        Sets the onlineuser_terminal_ip of this PortalOnlineUserInfoDto.
        认证终端IP。

        :param onlineuser_terminal_ip: The onlineuser_terminal_ip of this PortalOnlineUserInfoDto.
        :type: str
        """

        self._onlineuser_terminal_ip = onlineuser_terminal_ip

    @property
    def terminal_mac(self):
        """
        Gets the terminal_mac of this PortalOnlineUserInfoDto.
        认证终端MAC。

        :return: The terminal_mac of this PortalOnlineUserInfoDto.
        :rtype: str
        """
        return self._terminal_mac

    @terminal_mac.setter
    def terminal_mac(self, terminal_mac):
        """
        Sets the terminal_mac of this PortalOnlineUserInfoDto.
        认证终端MAC。

        :param terminal_mac: The terminal_mac of this PortalOnlineUserInfoDto.
        :type: str
        """

        self._terminal_mac = terminal_mac

    @property
    def ssid(self):
        """
        Gets the ssid of this PortalOnlineUserInfoDto.
        SSID。

        :return: The ssid of this PortalOnlineUserInfoDto.
        :rtype: str
        """
        return self._ssid

    @ssid.setter
    def ssid(self, ssid):
        """
        Sets the ssid of this PortalOnlineUserInfoDto.
        SSID。

        :param ssid: The ssid of this PortalOnlineUserInfoDto.
        :type: str
        """

        self._ssid = ssid

    @property
    def auth_mode(self):
        """
        Gets the auth_mode of this PortalOnlineUserInfoDto.
        认证方式。

        :return: The auth_mode of this PortalOnlineUserInfoDto.
        :rtype: str
        """
        return self._auth_mode

    @auth_mode.setter
    def auth_mode(self, auth_mode):
        """
        Sets the auth_mode of this PortalOnlineUserInfoDto.
        认证方式。

        :param auth_mode: The auth_mode of this PortalOnlineUserInfoDto.
        :type: str
        """

        self._auth_mode = auth_mode

    @property
    def user_type(self):
        """
        Gets the user_type of this PortalOnlineUserInfoDto.
        用户类型。

        :return: The user_type of this PortalOnlineUserInfoDto.
        :rtype: str
        """
        return self._user_type

    @user_type.setter
    def user_type(self, user_type):
        """
        Sets the user_type of this PortalOnlineUserInfoDto.
        用户类型。

        :param user_type: The user_type of this PortalOnlineUserInfoDto.
        :type: str
        """

        self._user_type = user_type

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, PortalOnlineUserInfoDto):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
