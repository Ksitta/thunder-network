# coding: utf-8

"""
    设备升级

    · 查询设备文件 · 创建站点升级 · 查询站点升级 · 查询设备升级 · 取消设备升级 · 删除站点升级 · 重新升级设备 

    OpenAPI spec version: 1.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from pprint import pformat
from six import iteritems
import re


class PolicySiteInput(object):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """


    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'site_id': 'str',
        'device_model_list': 'list[DeviceModel]'
    }

    attribute_map = {
        'site_id': 'siteId',
        'device_model_list': 'deviceModelList'
    }

    def __init__(self, site_id=None, device_model_list=None):
        """
        PolicySiteInput - a model defined in Swagger
        """

        self._site_id = None
        self._device_model_list = None

        if site_id is not None:
          self.site_id = site_id
        if device_model_list is not None:
          self.device_model_list = device_model_list

    @property
    def site_id(self):
        """
        Gets the site_id of this PolicySiteInput.
        站点ID。

        :return: The site_id of this PolicySiteInput.
        :rtype: str
        """
        return self._site_id

    @site_id.setter
    def site_id(self, site_id):
        """
        Sets the site_id of this PolicySiteInput.
        站点ID。

        :param site_id: The site_id of this PolicySiteInput.
        :type: str
        """

        self._site_id = site_id

    @property
    def device_model_list(self):
        """
        Gets the device_model_list of this PolicySiteInput.
        设备款型。

        :return: The device_model_list of this PolicySiteInput.
        :rtype: list[DeviceModel]
        """
        return self._device_model_list

    @device_model_list.setter
    def device_model_list(self, device_model_list):
        """
        Sets the device_model_list of this PolicySiteInput.
        设备款型。

        :param device_model_list: The device_model_list of this PolicySiteInput.
        :type: list[DeviceModel]
        """

        self._device_model_list = device_model_list

    def to_dict(self):
        """
        Returns the model properties as a dict
        """
        result = {}

        for attr, _ in iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """
        Returns the string representation of the model
        """
        return pformat(self.to_dict())

    def __repr__(self):
        """
        For `print` and `pprint`
        """
        return self.to_str()

    def __eq__(self, other):
        """
        Returns true if both objects are equal
        """
        if not isinstance(other, PolicySiteInput):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """
        Returns true if both objects are not equal
        """
        return not self == other
